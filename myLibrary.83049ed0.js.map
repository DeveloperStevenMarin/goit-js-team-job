{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,uCAGMC,EAAWC,SAASC,eAAe,qBACnCC,EAAiBF,SAASC,eAAe,oBACzCE,EAAUH,SAASI,cAAc,qBACnCC,EAAc,EACdC,EAAa,EAEjBP,EAASQ,iBAAiB,SAE1B,WACE,IAAMC,EAAkBC,KAAKC,MAAMC,aAAaC,QAAQ,cAGlDC,EAAgBL,EAAgBM,KAAI,SAAAC,GACxC,OAAOC,MACL,sCAAyDC,OAAnBF,EAAQ,aAAmBE,OAARC,EAAAC,QAAQ,iBACjEC,MAAK,SAAAC,G,OAAYA,EAASC,M,OAS9B,SAASC,EAAYC,GACnB,IAAIC,EAAa,GACjBC,QAAQC,IAAId,GACTO,MAAK,SAAAQ,GACJ,IAAMC,EAAoBrB,EAAgBsB,OAC1CxB,EAXc,SAAAuB,GAClB,OAAOA,GAAqB,GAAKE,KAAKC,KAAKH,EAAoB,IAAM,C,CAUpDI,CAAYJ,GACzB,IAAMK,GAAK,EAAAC,EAAAC,eAAcZ,EAAalB,GACtCH,EAAQkC,UAAYH,EAMpB,IAJA,IACMI,EAA6B,IAAhBd,EAAoB,EADtB,IAC2BA,EAAc,GACpDe,EAAWR,KAAKS,IAFL,GAEShB,EAAwBI,EAAWE,QAEpDW,EAAIH,EAAYG,EAAIF,EAAUE,IAAK,CAC1C,IAAMC,EAAOd,EAAWa,GACE,KAAtBC,EAAKC,eACPD,EAAKC,aAAe,sBAEtB,IACMC,EAAc,GAAsB3B,OADrB,8BACe,QAAuBA,OAAjByB,EAAKG,aACzCC,EAAaJ,EAAKK,OAAOjC,KAAI,SAAAkC,G,OAASA,EAAMC,I,IAAMC,KAAK,OACvDC,EAAY,qHAI4BlC,OADfyB,EAAKU,GAAG,sFAErCnC,OAD4C2B,EAAY,WAK1B3B,OAJ9ByB,EAAKW,MACN,qLAMSpC,OAHsByB,EAAKW,MAAM,iGAGjBpC,OAAhB6B,EAAW,OAA+C7B,OAA1C,IAAIqC,KAAKZ,EAAKC,cAAcY,cAAc,2HAMpE9B,GAAc0B,C,CAGhBjD,EAAemC,UAAYZ,C,IAE5B+B,OAAM,SAAAC,G,OAASC,QAAQD,MAAMA,E,IAsClC,SAASE,IACoB3D,SAASC,eAAe,gBAChC2D,UAAYvD,C,CAtFjCkB,EAAY,GA8DZpB,EAAQI,iBAAiB,SAbzB,SAAyBsD,GACvB,GAA6B,OAAzBA,EAAMC,OAAOC,QAAkB,CACjC,IAAMC,EAAeH,EAAMC,OAAOF,UAC5BK,EAAkBC,SAASF,GACZ,QAAjBA,IAEF3D,EAAc4D,EACdJ,EAAMM,kBACN5C,EAAYlB,G,KAOlBL,SACGC,eAAe,sBACfM,iBAAiB,QAAS6D,EAAAvE,EAAA,CAAAuE,EAAAC,GAAAC,MAAA,SAAAC,I,uEACrBlE,EAAc,GAAC,C,sBACjBA,I,SACMkB,EAAY2C,SAAS7D,I,OAC3BsD,I,4CAIN3D,SACGC,eAAe,sBACfM,iBAAiB,QAAS6D,EAAAvE,EAAA,CAAAuE,EAAAC,GAAAC,MAAA,SAAAC,I,uEACrBlE,EAAcC,GAAU,C,sBAC1BD,I,SACMkB,EAAY2C,SAAS7D,I,OAC3BsD,EAAsBO,SAAS7D,I","sources":["src/queue.js"],"sourcesContent":["import { API_KEY } from './config';\r\nimport { generatePages } from './pagination';\r\n\r\nconst queueBtn = document.getElementById('queue-movies--btn');\r\nconst queueContainer = document.getElementById('movies-container');\r\nconst ulPages = document.querySelector('.pagination__page');\r\nlet currentPage = 1;\r\nlet totalPages = 1;\r\n\r\nqueueBtn.addEventListener('click', renderQueueMovies);\r\n\r\nfunction renderQueueMovies() {\r\n  const queueMoviesList = JSON.parse(localStorage.getItem('queueList'));\r\n  let moviesHTML = '';\r\n\r\n  const fetchPromises = queueMoviesList.map(movieID => {\r\n    return fetch(\r\n      `https://api.themoviedb.org/3/movie/${movieID}?api_key=${API_KEY}&language=en`\r\n    ).then(response => response.json());\r\n  });\r\n\r\n  const total_pages = queueMoviesLength => {\r\n    return queueMoviesLength >= 20 ? Math.ceil(queueMoviesLength / 20) : 1;\r\n  };\r\n\r\n  fetchMovies(1);\r\n\r\n  function fetchMovies(currentPage) {\r\n    let moviesHTML = '';\r\n    Promise.all(fetchPromises)\r\n      .then(moviesData => {\r\n        const queueMoviesLength = queueMoviesList.length;\r\n        totalPages = total_pages(queueMoviesLength);\r\n        const li = generatePages(currentPage, totalPages);\r\n        ulPages.innerHTML = li;\r\n\r\n        const pageSize = 20;\r\n        const startIndex = currentPage === 1 ? 0 : (currentPage - 1) * pageSize;\r\n        const endIndex = Math.min(currentPage * pageSize, moviesData.length);\r\n\r\n        for (let i = startIndex; i < endIndex; i++) {\r\n          const data = moviesData[i];\r\n          if (data.release_date === '') {\r\n            data.release_date = 'Sin aÃ±o registrado';\r\n          }\r\n          const baseImageUrl = 'https://image.tmdb.org/t/p/';\r\n          const moviePoster = `${baseImageUrl}w500${data.poster_path}`;\r\n          const genreNames = data.genres.map(genre => genre.name).join(' | ');\r\n          const movieHTML = `\r\n            <div class=\"photo-card\">\r\n              <div class=\"info\">\r\n                <a onclick=\"openModal('${data.id}')\" class=\"info__poster\">\r\n                  <img class=\"info__poster--img\" src=\"${moviePoster}\" alt=\"${\r\n            data.title\r\n          }\" loading=\"lazy\" width=\"100px\" height=\"100px\" id=\"info__poster--img\" />\r\n                </a>\r\n                <h3 class=\"info__title\">\r\n                  <strong class=\"title\">${data.title}</strong>\r\n                </h3>\r\n                <p class=\"info__genre\">\r\n                  ${genreNames} | ${new Date(data.release_date).getFullYear()}\r\n                </p>\r\n                <p class=\"info-item\"></p>\r\n              </div>\r\n            </div>\r\n          `;\r\n          moviesHTML += movieHTML;\r\n        }\r\n\r\n        queueContainer.innerHTML = moviesHTML;\r\n      })\r\n      .catch(error => console.error(error));\r\n  }\r\n\r\n  function handlePageClick(event) {\r\n    if (event.target.tagName === 'LI') {\r\n      const clickedValue = event.target.innerText;\r\n      const clickedValueInt = parseInt(clickedValue);\r\n      if (clickedValue === '...') {\r\n      } else {\r\n        currentPage = clickedValueInt;\r\n        event.stopPropagation();\r\n        fetchMovies(currentPage);\r\n      }\r\n    }\r\n  }\r\n\r\n  ulPages.addEventListener('click', handlePageClick);\r\n\r\n  document\r\n    .getElementById('library__prev-page')\r\n    .addEventListener('click', async () => {\r\n      if (currentPage > 1) {\r\n        currentPage--;\r\n        await fetchMovies(parseInt(currentPage));\r\n        updateCurrentPageText(currentPage);\r\n      }\r\n    });\r\n\r\n  document\r\n    .getElementById('library__next-page')\r\n    .addEventListener('click', async () => {\r\n      if (currentPage < totalPages) {\r\n        currentPage++;\r\n        await fetchMovies(parseInt(currentPage));\r\n        updateCurrentPageText(parseInt(currentPage));\r\n      }\r\n    });\r\n\r\n  function updateCurrentPageText() {\r\n    const currentPageElement = document.getElementById('current-page');\r\n    currentPageElement.innerText = currentPage;\r\n  }\r\n}\r\n"],"names":["$bpxeT","parcelRequire","$8bbaa4749a5900dd$var$queueBtn","document","getElementById","$8bbaa4749a5900dd$var$queueContainer","$8bbaa4749a5900dd$var$ulPages","querySelector","$8bbaa4749a5900dd$var$currentPage","$8bbaa4749a5900dd$var$totalPages","addEventListener","queueMoviesList","JSON","parse","localStorage","getItem","fetchPromises","map","movieID","fetch","concat","$8lXr3","API_KEY","then","response","json","fetchMovies","currentPage1","moviesHTML","Promise","all","moviesData","queueMoviesLength","length","Math","ceil","total_pages","li","$dLAzy","generatePages","innerHTML","startIndex","endIndex","min","i","data","release_date","moviePoster","poster_path","genreNames","genres","genre","name","join","movieHTML","id","title","Date","getFullYear","catch","error","console","updateCurrentPageText","innerText","event","target","tagName","clickedValue","clickedValueInt","parseInt","stopPropagation","$parcel$interopDefault","$2TvXO","mark","_callee"],"version":3,"file":"myLibrary.83049ed0.js.map"}